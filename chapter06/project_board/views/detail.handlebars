<h1>{{title}}</h1>
{{#with post}}
    <h2 class="text-xl">{{title}}</h2>

    <div>
        작성자: <b>{{writer}}</b>
    </div>

    <div>
        조회수: {{hits}} | 작성일시: {{dateString createdDt}}
        <button onclick="modifyPost()">수정</button>
        <button onclick="deletePost()">삭제</button>
    </div>

    <div>
        <pre>{{content}}</pre>      <!-- pre 태그 안에 넣어서 개행을 시킴 -->
    </div>

    <section>
        <div>
            <!-- 몽고디비에서 테이블을 따로 만들지 않아도 댓글 작성 가능, 대용량 커뮤니티가 아니라는 가정하에 -->
            <h3>{{lengthOfList comments}}개의 댓글이 있습니다</h3>
        </div>

        <form method="post" action="/write-comment">
            <input type="hidden" name="id" value="{{_id}}" />  <!-- 게시글 ID -->
            <div>
                <div>
                    <input type="text" name="name" placeholder="이름" />
                    <input type="password" name="password" placeholder="비밀번호" />
                </div>
                <div>
                    <textarea cols="40" rows="3" name="comment" placeholder="댓글을 입력해주세요"></textarea>
                    <br /><br />
                    <button>댓글쓰기</button>   <!-- submit 은 화면을 갱신시키므로, ajax 로 처리하기 위해서 일반 버튼으로 만듦 -->
                </div>
            </div>
        </form>
    </section>

    <section>
        {{#each comments}}
            <div>
                <div>
                    작성자: <b>{{name}}</b>
                </div>
                <div>
                    작성일시: {{dateString createdDt}}
                    <button onclick="deleteComment('{{idx}}')">삭제</button>
                </div>
            </div>
            <div>
                <pre>{{comment}}</pre>
            </div>
        {{/each}}
    </section>
{{/with}}

<footer>
    <div>
        <a href="/">목록으로</a>
    </div>
</footer>

<script>

    const postOption = {
      method: "POST",
      headers: {
        'Content-Type': "application/json",
      },
    }

    // Ajax 사용을 위해서 fetch() 함수를 사용할 예정 -> Promise 반환
    async function modifyPost() {
      // prompt 함수는 브라우저에 내장된 모달을 띄우고 입력을 받을 수 있게 해줌
      const password = prompt("패스워드를 입력해주세요.");

      // 프롬포트에서 취소를 누른 경우 처리
      if(!password) return;

      // check-password API 실행
      // fetch(url, option) 의 형태로 호출되는데, url 은 호출할 API 의 경로이고, option 은 method, header, body 등의 데이터가 들어간다.
      const result = await fetch("/check-password", {
        ...postOption,
        body: JSON.stringify({ id: "{{post._id}}", password })
      });

      // json 함수를 실행하는 경우도 await 를 해줘야 함
      const data = await result.json();

      // 패스워드가 맞는 경우 수정페이지로 이동
      if(data.isExist) {
        document.location = "/modify/{{post._id}}";
      } else {
        alert("비밀번호가 일치하지 않습니다.");
      }

    }

    const deleteOption = {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
    };

    async function deletePost() {
      const password = prompt("패스워드를 입력해주세요.");

      if(!password) return;

      const result = await fetch("/delete", {
        ...deleteOption,
        body: JSON.stringify({ id: "{{post._id}}", password }),
      });

      const data = await result.json();
      if(!data.isSuccess) {
        alert("삭제에 실패하였습니다. 패스워드를 확인해주세요.");
          return;
      }

      // home 으로 이동
      document.location = "/";

    }

</script>